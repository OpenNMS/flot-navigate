{"version":3,"sources":["node_modules/jquery.event.drag/jquery.event.drag.js","node_modules/jquery.event.drag/jquery.event.drag.live.js","node_modules/jquery-mousewheel/jquery.mousewheel.js","jquery.flot.navigate.js"],"names":["require","$","plot","plugins","push","init","onZoomClick","e","zoomOut","c","offset","left","pageX","top","pageY","center","zoom","onMouseWheel","delta","preventDefault","prevCursor","prevPageX","prevPageY","panTimeout","onDragStart","which","getPlaceholder","css","getOptions","pan","cursor","onDrag","frameRate","setTimeout","onDragEnd","clearTimeout","args","amount","w","width","h","height","xf","yf","minmax","x","min","max","y","each","getAxes","_","axis","zr","pr","opts","options","direction","ranges","xaxis","zoomRange","panRange","yaxis","c2p","tmp","range","setupGrid","draw","preventEvent","trigger","isNaN","d","p2c","hooks","bindEvents","eventHolder","o","interactive","mousewheel","bind","distance","shutdown","unbind","name","version","jQuery"],"mappings":"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","file":"jquery.flot.navigate.js","sourceRoot":"..","sourcesContent":["/*!\n * jquery.event.drag - v 2.2\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\n * Open Source MIT License - http://threedubmedia.com/code/license\n */\n// Created: 2008-06-04\n// Updated: 2012-05-21\n// REQUIRES: jquery 1.7.x\n\nmodule.exports = function( $ ){\n  // add the jquery instance method\n  $.fn.drag = function( str, arg, opts ){\n  \t// figure out the event type\n  \tvar type = typeof str == \"string\" ? str : \"\",\n  \t// figure out the event handler...\n  \tfn = $.isFunction( str ) ? str : $.isFunction( arg ) ? arg : null;\n  \t// fix the event type\n  \tif ( type.indexOf(\"drag\") !== 0 )\n  \t\ttype = \"drag\"+ type;\n  \t// were options passed\n  \topts = ( str == fn ? arg : opts ) || {};\n  \t// trigger or bind event handler\n  \treturn fn ? this.bind( type, opts, fn ) : this.trigger( type );\n  };\n\n  // local refs (increase compression)\n  var $event = $.event,\n  $special = $event.special,\n  // configure the drag special event\n  drag = $special.drag = {\n\n  \t// these are the default settings\n  \tdefaults: {\n  \t\twhich: 1, // mouse button pressed to start drag sequence\n  \t\tdistance: 0, // distance dragged before dragstart\n  \t\tnot: ':input', // selector to suppress dragging on target elements\n  \t\thandle: null, // selector to match handle target elements\n  \t\trelative: false, // true to use \"position\", false to use \"offset\"\n  \t\tdrop: true, // false to suppress drop events, true or selector to allow\n  \t\tclick: false // false to suppress click events after dragend (no proxy)\n  \t},\n\n  \t// the key name for stored drag data\n  \tdatakey: \"dragdata\",\n\n  \t// prevent bubbling for better performance\n  \tnoBubble: true,\n\n  \t// count bound related events\n  \tadd: function( obj ){\n  \t\t// read the interaction data\n  \t\tvar data = $.data( this, drag.datakey ),\n  \t\t// read any passed options\n  \t\topts = obj.data || {};\n  \t\t// count another realted event\n  \t\tdata.related += 1;\n  \t\t// extend data options bound with this event\n  \t\t// don't iterate \"opts\" in case it is a node\n  \t\t$.each( drag.defaults, function( key, def ){\n  \t\t\tif ( opts[ key ] !== undefined )\n  \t\t\t\tdata[ key ] = opts[ key ];\n  \t\t});\n  \t},\n\n  \t// forget unbound related events\n  \tremove: function(){\n  \t\t$.data( this, drag.datakey ).related -= 1;\n  \t},\n\n  \t// configure interaction, capture settings\n  \tsetup: function(){\n  \t\t// check for related events\n  \t\tif ( $.data( this, drag.datakey ) )\n  \t\t\treturn;\n  \t\t// initialize the drag data with copied defaults\n  \t\tvar data = $.extend({ related:0 }, drag.defaults );\n  \t\t// store the interaction data\n  \t\t$.data( this, drag.datakey, data );\n  \t\t// bind the mousedown event, which starts drag interactions\n  \t\t$event.add( this, \"touchstart mousedown\", drag.init, data );\n  \t\t// prevent image dragging in IE...\n  \t\tif ( this.attachEvent )\n  \t\t\tthis.attachEvent(\"ondragstart\", drag.dontstart );\n  \t},\n\n  \t// destroy configured interaction\n  \tteardown: function(){\n  \t\tvar data = $.data( this, drag.datakey ) || {};\n  \t\t// check for related events\n  \t\tif ( data.related )\n  \t\t\treturn;\n  \t\t// remove the stored data\n  \t\t$.removeData( this, drag.datakey );\n  \t\t// remove the mousedown event\n  \t\t$event.remove( this, \"touchstart mousedown\", drag.init );\n  \t\t// enable text selection\n  \t\tdrag.textselect( true );\n  \t\t// un-prevent image dragging in IE...\n  \t\tif ( this.detachEvent )\n  \t\t\tthis.detachEvent(\"ondragstart\", drag.dontstart );\n  \t},\n\n  \t// initialize the interaction\n  \tinit: function( event ){\n  \t\t// sorry, only one touch at a time\n  \t\tif ( drag.touched )\n  \t\t\treturn;\n  \t\t// the drag/drop interaction data\n  \t\tvar dd = event.data, results;\n  \t\t// check the which directive\n  \t\tif ( event.which != 0 && dd.which > 0 && event.which != dd.which )\n  \t\t\treturn;\n  \t\t// check for suppressed selector\n  \t\tif ( $( event.target ).is( dd.not ) )\n  \t\t\treturn;\n  \t\t// check for handle selector\n  \t\tif ( dd.handle && !$( event.target ).closest( dd.handle, event.currentTarget ).length )\n  \t\t\treturn;\n\n  \t\tdrag.touched = event.type == 'touchstart' ? this : null;\n  \t\tdd.propagates = 1;\n  \t\tdd.mousedown = this;\n  \t\tdd.interactions = [ drag.interaction( this, dd ) ];\n  \t\tdd.target = event.target;\n  \t\tdd.pageX = event.pageX;\n  \t\tdd.pageY = event.pageY;\n  \t\tdd.dragging = null;\n  \t\t// handle draginit event...\n  \t\tresults = drag.hijack( event, \"draginit\", dd );\n  \t\t// early cancel\n  \t\tif ( !dd.propagates )\n  \t\t\treturn;\n  \t\t// flatten the result set\n  \t\tresults = drag.flatten( results );\n  \t\t// insert new interaction elements\n  \t\tif ( results && results.length ){\n  \t\t\tdd.interactions = [];\n  \t\t\t$.each( results, function(){\n  \t\t\t\tdd.interactions.push( drag.interaction( this, dd ) );\n  \t\t\t});\n  \t\t}\n  \t\t// remember how many interactions are propagating\n  \t\tdd.propagates = dd.interactions.length;\n  \t\t// locate and init the drop targets\n  \t\tif ( dd.drop !== false && $special.drop )\n  \t\t\t$special.drop.handler( event, dd );\n  \t\t// disable text selection\n  \t\tdrag.textselect( false );\n  \t\t// bind additional events...\n  \t\tif ( drag.touched )\n  \t\t\t$event.add( drag.touched, \"touchmove touchend\", drag.handler, dd );\n  \t\telse\n  \t\t\t$event.add( document, \"mousemove mouseup\", drag.handler, dd );\n  \t\t// helps prevent text selection or scrolling\n  \t\tif ( !drag.touched || dd.live )\n  \t\t\treturn false;\n  \t},\n\n  \t// returns an interaction object\n  \tinteraction: function( elem, dd ){\n  \t\tvar offset = $( elem )[ dd.relative ? \"position\" : \"offset\" ]() || { top:0, left:0 };\n  \t\treturn {\n  \t\t\tdrag: elem,\n  \t\t\tcallback: new drag.callback(),\n  \t\t\tdroppable: [],\n  \t\t\toffset: offset\n  \t\t};\n  \t},\n\n  \t// handle drag-releatd DOM events\n  \thandler: function( event ){\n  \t\t// read the data before hijacking anything\n  \t\tvar dd = event.data;\n  \t\t// handle various events\n  \t\tswitch ( event.type ){\n  \t\t\t// mousemove, check distance, start dragging\n  \t\t\tcase !dd.dragging && 'touchmove':\n  \t\t\t\tevent.preventDefault();\n  \t\t\tcase !dd.dragging && 'mousemove':\n  \t\t\t\t//  drag tolerance, x� + y� = distance�\n  \t\t\t\tif ( Math.pow(  event.pageX-dd.pageX, 2 ) + Math.pow(  event.pageY-dd.pageY, 2 ) < Math.pow( dd.distance, 2 ) )\n  \t\t\t\t\tbreak; // distance tolerance not reached\n  \t\t\t\tevent.target = dd.target; // force target from \"mousedown\" event (fix distance issue)\n  \t\t\t\tdrag.hijack( event, \"dragstart\", dd ); // trigger \"dragstart\"\n  \t\t\t\tif ( dd.propagates ) // \"dragstart\" not rejected\n  \t\t\t\t\tdd.dragging = true; // activate interaction\n  \t\t\t// mousemove, dragging\n  \t\t\tcase 'touchmove':\n  \t\t\t\tevent.preventDefault();\n  \t\t\tcase 'mousemove':\n  \t\t\t\tif ( dd.dragging ){\n  \t\t\t\t\t// trigger \"drag\"\n  \t\t\t\t\tdrag.hijack( event, \"drag\", dd );\n  \t\t\t\t\tif ( dd.propagates ){\n  \t\t\t\t\t\t// manage drop events\n  \t\t\t\t\t\tif ( dd.drop !== false && $special.drop )\n  \t\t\t\t\t\t\t$special.drop.handler( event, dd ); // \"dropstart\", \"dropend\"\n  \t\t\t\t\t\tbreak; // \"drag\" not rejected, stop\n  \t\t\t\t\t}\n  \t\t\t\t\tevent.type = \"mouseup\"; // helps \"drop\" handler behave\n  \t\t\t\t}\n  \t\t\t// mouseup, stop dragging\n  \t\t\tcase 'touchend':\n  \t\t\tcase 'mouseup':\n  \t\t\tdefault:\n  \t\t\t\tif ( drag.touched )\n  \t\t\t\t\t$event.remove( drag.touched, \"touchmove touchend\", drag.handler ); // remove touch events\n  \t\t\t\telse\n  \t\t\t\t\t$event.remove( document, \"mousemove mouseup\", drag.handler ); // remove page events\n  \t\t\t\tif ( dd.dragging ){\n  \t\t\t\t\tif ( dd.drop !== false && $special.drop )\n  \t\t\t\t\t\t$special.drop.handler( event, dd ); // \"drop\"\n  \t\t\t\t\tdrag.hijack( event, \"dragend\", dd ); // trigger \"dragend\"\n  \t\t\t\t}\n  \t\t\t\tdrag.textselect( true ); // enable text selection\n  \t\t\t\t// if suppressing click events...\n  \t\t\t\tif ( dd.click === false && dd.dragging )\n  \t\t\t\t\t$.data( dd.mousedown, \"suppress.click\", new Date().getTime() + 5 );\n  \t\t\t\tdd.dragging = drag.touched = false; // deactivate element\n  \t\t\t\tbreak;\n  \t\t}\n  \t},\n\n  \t// re-use event object for custom events\n  \thijack: function( event, type, dd, x, elem ){\n  \t\t// not configured\n  \t\tif ( !dd )\n  \t\t\treturn;\n  \t\t// remember the original event and type\n  \t\tvar orig = { event:event.originalEvent, type:event.type },\n  \t\t// is the event drag related or drog related?\n  \t\tmode = type.indexOf(\"drop\") ? \"drag\" : \"drop\",\n  \t\t// iteration vars\n  \t\tresult, i = x || 0, ia, $elems, callback,\n  \t\tlen = !isNaN( x ) ? x : dd.interactions.length;\n  \t\t// modify the event type\n  \t\tevent.type = type;\n  \t\t// remove the original event\n  \t\tevent.originalEvent = null;\n  \t\t// initialize the results\n  \t\tdd.results = [];\n  \t\t// handle each interacted element\n  \t\tdo if ( ia = dd.interactions[ i ] ){\n  \t\t\t// validate the interaction\n  \t\t\tif ( type !== \"dragend\" && ia.cancelled )\n  \t\t\t\tcontinue;\n  \t\t\t// set the dragdrop properties on the event object\n  \t\t\tcallback = drag.properties( event, dd, ia );\n  \t\t\t// prepare for more results\n  \t\t\tia.results = [];\n  \t\t\t// handle each element\n  \t\t\t$( elem || ia[ mode ] || dd.droppable ).each(function( p, subject ){\n  \t\t\t\t// identify drag or drop targets individually\n  \t\t\t\tcallback.target = subject;\n  \t\t\t\t// force propagtion of the custom event\n  \t\t\t\tevent.isPropagationStopped = function(){ return false; };\n  \t\t\t\t// handle the event\n  \t\t\t\tresult = subject ? $event.dispatch.call( subject, event, callback ) : null;\n  \t\t\t\t// stop the drag interaction for this element\n  \t\t\t\tif ( result === false ){\n  \t\t\t\t\tif ( mode == \"drag\" ){\n  \t\t\t\t\t\tia.cancelled = true;\n  \t\t\t\t\t\tdd.propagates -= 1;\n  \t\t\t\t\t}\n  \t\t\t\t\tif ( type == \"drop\" ){\n  \t\t\t\t\t\tia[ mode ][p] = null;\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t\t// assign any dropinit elements\n  \t\t\t\telse if ( type == \"dropinit\" )\n  \t\t\t\t\tia.droppable.push( drag.element( result ) || subject );\n  \t\t\t\t// accept a returned proxy element\n  \t\t\t\tif ( type == \"dragstart\" )\n  \t\t\t\t\tia.proxy = $( drag.element( result ) || ia.drag )[0];\n  \t\t\t\t// remember this result\n  \t\t\t\tia.results.push( result );\n  \t\t\t\t// forget the event result, for recycling\n  \t\t\t\tdelete event.result;\n  \t\t\t\t// break on cancelled handler\n  \t\t\t\tif ( type !== \"dropinit\" )\n  \t\t\t\t\treturn result;\n  \t\t\t});\n  \t\t\t// flatten the results\n  \t\t\tdd.results[ i ] = drag.flatten( ia.results );\n  \t\t\t// accept a set of valid drop targets\n  \t\t\tif ( type == \"dropinit\" )\n  \t\t\t\tia.droppable = drag.flatten( ia.droppable );\n  \t\t\t// locate drop targets\n  \t\t\tif ( type == \"dragstart\" && !ia.cancelled )\n  \t\t\t\tcallback.update();\n  \t\t}\n  \t\twhile ( ++i < len )\n  \t\t// restore the original event & type\n  \t\tevent.type = orig.type;\n  \t\tevent.originalEvent = orig.event;\n  \t\t// return all handler results\n  \t\treturn drag.flatten( dd.results );\n  \t},\n\n  \t// extend the callback object with drag/drop properties...\n  \tproperties: function( event, dd, ia ){\n  \t\tvar obj = ia.callback;\n  \t\t// elements\n  \t\tobj.drag = ia.drag;\n  \t\tobj.proxy = ia.proxy || ia.drag;\n  \t\t// starting mouse position\n  \t\tobj.startX = dd.pageX;\n  \t\tobj.startY = dd.pageY;\n  \t\t// current distance dragged\n  \t\tobj.deltaX = event.pageX - dd.pageX;\n  \t\tobj.deltaY = event.pageY - dd.pageY;\n  \t\t// original element position\n  \t\tobj.originalX = ia.offset.left;\n  \t\tobj.originalY = ia.offset.top;\n  \t\t// adjusted element position\n  \t\tobj.offsetX = obj.originalX + obj.deltaX;\n  \t\tobj.offsetY = obj.originalY + obj.deltaY;\n  \t\t// assign the drop targets information\n  \t\tobj.drop = drag.flatten( ( ia.drop || [] ).slice() );\n  \t\tobj.available = drag.flatten( ( ia.droppable || [] ).slice() );\n  \t\treturn obj;\n  \t},\n\n  \t// determine is the argument is an element or jquery instance\n  \telement: function( arg ){\n  \t\tif ( arg && ( arg.jquery || arg.nodeType == 1 ) )\n  \t\t\treturn arg;\n  \t},\n\n  \t// flatten nested jquery objects and arrays into a single dimension array\n  \tflatten: function( arr ){\n  \t\treturn $.map( arr, function( member ){\n  \t\t\treturn member && member.jquery ? $.makeArray( member ) :\n  \t\t\t\tmember && member.length ? drag.flatten( member ) : member;\n  \t\t});\n  \t},\n\n  \t// toggles text selection attributes ON (true) or OFF (false)\n  \ttextselect: function( bool ){\n  \t\t$( document )[ bool ? \"unbind\" : \"bind\" ](\"selectstart\", drag.dontstart )\n  \t\t\t.css(\"MozUserSelect\", bool ? \"\" : \"none\" );\n  \t\t// .attr(\"unselectable\", bool ? \"off\" : \"on\" )\n  \t\tdocument.unselectable = bool ? \"off\" : \"on\";\n  \t},\n\n  \t// suppress \"selectstart\" and \"ondragstart\" events\n  \tdontstart: function(){\n  \t\treturn false;\n  \t},\n\n  \t// a callback instance contructor\n  \tcallback: function(){}\n\n  };\n\n  // callback methods\n  drag.callback.prototype = {\n  \tupdate: function(){\n  \t\tif ( $special.drop && this.available.length )\n  \t\t\t$.each( this.available, function( i ){\n  \t\t\t\t$special.drop.locate( this, i );\n  \t\t\t});\n  \t}\n  };\n\n  // patch $.event.$dispatch to allow suppressing clicks\n  var $dispatch = $event.dispatch;\n  $event.dispatch = function( event ){\n  \tif ( $.data( this, \"suppress.\"+ event.type ) - new Date().getTime() > 0 ){\n  \t\t$.removeData( this, \"suppress.\"+ event.type );\n  \t\treturn;\n  \t}\n  \treturn $dispatch.apply( this, arguments );\n  };\n\n  // event fix hooks for touch events...\n  var touchHooks =\n  $event.fixHooks.touchstart =\n  $event.fixHooks.touchmove =\n  $event.fixHooks.touchend =\n  $event.fixHooks.touchcancel = {\n  \tprops: \"clientX clientY pageX pageY screenX screenY\".split( \" \" ),\n  \tfilter: function( event, orig ) {\n  \t\tif ( orig ){\n  \t\t\tvar touched = ( orig.touches && orig.touches[0] )\n  \t\t\t\t|| ( orig.changedTouches && orig.changedTouches[0] )\n  \t\t\t\t|| null;\n  \t\t\t// iOS webkit: touchstart, touchmove, touchend\n  \t\t\tif ( touched )\n  \t\t\t\t$.each( touchHooks.props, function( i, prop ){\n  \t\t\t\t\tevent[ prop ] = touched[ prop ];\n  \t\t\t\t});\n  \t\t}\n  \t\treturn event;\n  \t}\n  };\n\n  // share the same special event configuration with related events...\n  $special.draginit = $special.dragstart = $special.dragend = drag;\n};\n","/*!\n * jquery.event.drag.live - v 2.2\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\n * Open Source MIT License - http://threedubmedia.com/code/license\n */\n// Created: 2010-06-07\n// Updated: 2012-05-21\n// REQUIRES: jquery 1.7.x, event.drag 2.2\n\nmodule.exports = function( $ ){\n  require('./jquery.event.drag')($);\n\n  // local refs (increase compression)\n  var $event = $.event,\n  // ref the special event config\n  drag = $event.special.drag,\n  // old drag event add method\n  origadd = drag.add,\n  // old drag event teradown method\n  origteardown = drag.teardown;\n\n  // allow events to bubble for delegation\n  drag.noBubble = false;\n\n  // the namespace for internal live events\n  drag.livekey = \"livedrag\";\n\n  // new drop event add method\n  drag.add = function( obj ){\n  \t// call the old method\n  \torigadd.apply( this, arguments );\n  \t// read the data\n  \tvar data = $.data( this, drag.datakey );\n  \t// bind the live \"draginit\" delegator\n  \tif ( !data.live && obj.selector ){\n  \t\tdata.live = true;\n  \t\t$event.add( this, \"draginit.\"+ drag.livekey, drag.delegate );\n  \t}\n  };\n\n  // new drop event teardown method\n  drag.teardown = function(){\n  \t// call the old method\n  \torigteardown.apply( this, arguments );\n  \t// read the data\n  \tvar data = $.data( this, drag.datakey ) || {};\n  \t// bind the live \"draginit\" delegator\n  \tif ( data.live ){\n  \t\t// remove the \"live\" delegation\n  \t\t$event.remove( this, \"draginit.\"+ drag.livekey, drag.delegate );\n  \t\tdata.live = false;\n  \t}\n  };\n\n  // identify potential delegate elements\n  drag.delegate = function( event ){\n  \t// local refs\n  \tvar elems = [], target,\n  \t// element event structure\n  \tevents = $._data( this, \"events\" ) || {};\n  \t// query live events\n  \t$.each( events || [], function( key, arr ){\n  \t\t// no event type matches\n  \t\tif ( key.indexOf(\"drag\") !== 0 )\n  \t\t\treturn;\n  \t\t$.each( arr || [], function( i, obj ){\n  \t\t\t// locate the element to delegate\n  \t\t\ttarget = $( event.target ).closest( obj.selector )[0];\n  \t\t\t// no element found\n  \t\t\tif ( !target )\n  \t\t\t\treturn;\n  \t\t\t// add an event handler\n  \t\t\t$event.add( target, obj.origType+'.'+drag.livekey, obj.origHandler || obj.handler, obj.data );\n  \t\t\t// remember new elements\n  \t\t\tif ( $.inArray( target, elems ) < 0 )\n  \t\t\t\telems.push( target );\n  \t\t});\n  \t});\n  \t// if there are no elements, break\n  \tif ( !elems.length )\n  \t\treturn false;\n  \t// return the matched results, and clenup when complete\n  \treturn $( elems ).bind(\"dragend.\"+ drag.livekey, function(){\n  \t\t$event.remove( this, \".\"+ drag.livekey ); // cleanup delegation\n  \t});\n  };\n};\n","/*!\n * jQuery Mousewheel 3.1.13\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n */\n\n(function (factory) {\n    if ( typeof define === 'function' && define.amd ) {\n        // AMD. Register as an anonymous module.\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object') {\n        // Node/CommonJS style for Browserify\n        module.exports = factory;\n    } else {\n        // Browser globals\n        factory(jQuery);\n    }\n}(function ($) {\n\n    var toFix  = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],\n        toBind = ( 'onwheel' in document || document.documentMode >= 9 ) ?\n                    ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],\n        slice  = Array.prototype.slice,\n        nullLowestDeltaTimeout, lowestDelta;\n\n    if ( $.event.fixHooks ) {\n        for ( var i = toFix.length; i; ) {\n            $.event.fixHooks[ toFix[--i] ] = $.event.mouseHooks;\n        }\n    }\n\n    var special = $.event.special.mousewheel = {\n        version: '3.1.12',\n\n        setup: function() {\n            if ( this.addEventListener ) {\n                for ( var i = toBind.length; i; ) {\n                    this.addEventListener( toBind[--i], handler, false );\n                }\n            } else {\n                this.onmousewheel = handler;\n            }\n            // Store the line height and page height for this particular element\n            $.data(this, 'mousewheel-line-height', special.getLineHeight(this));\n            $.data(this, 'mousewheel-page-height', special.getPageHeight(this));\n        },\n\n        teardown: function() {\n            if ( this.removeEventListener ) {\n                for ( var i = toBind.length; i; ) {\n                    this.removeEventListener( toBind[--i], handler, false );\n                }\n            } else {\n                this.onmousewheel = null;\n            }\n            // Clean up the data we added to the element\n            $.removeData(this, 'mousewheel-line-height');\n            $.removeData(this, 'mousewheel-page-height');\n        },\n\n        getLineHeight: function(elem) {\n            var $elem = $(elem),\n                $parent = $elem['offsetParent' in $.fn ? 'offsetParent' : 'parent']();\n            if (!$parent.length) {\n                $parent = $('body');\n            }\n            return parseInt($parent.css('fontSize'), 10) || parseInt($elem.css('fontSize'), 10) || 16;\n        },\n\n        getPageHeight: function(elem) {\n            return $(elem).height();\n        },\n\n        settings: {\n            adjustOldDeltas: true, // see shouldAdjustOldDeltas() below\n            normalizeOffset: true  // calls getBoundingClientRect for each event\n        }\n    };\n\n    $.fn.extend({\n        mousewheel: function(fn) {\n            return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');\n        },\n\n        unmousewheel: function(fn) {\n            return this.unbind('mousewheel', fn);\n        }\n    });\n\n\n    function handler(event) {\n        var orgEvent   = event || window.event,\n            args       = slice.call(arguments, 1),\n            delta      = 0,\n            deltaX     = 0,\n            deltaY     = 0,\n            absDelta   = 0,\n            offsetX    = 0,\n            offsetY    = 0;\n        event = $.event.fix(orgEvent);\n        event.type = 'mousewheel';\n\n        // Old school scrollwheel delta\n        if ( 'detail'      in orgEvent ) { deltaY = orgEvent.detail * -1;      }\n        if ( 'wheelDelta'  in orgEvent ) { deltaY = orgEvent.wheelDelta;       }\n        if ( 'wheelDeltaY' in orgEvent ) { deltaY = orgEvent.wheelDeltaY;      }\n        if ( 'wheelDeltaX' in orgEvent ) { deltaX = orgEvent.wheelDeltaX * -1; }\n\n        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event\n        if ( 'axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {\n            deltaX = deltaY * -1;\n            deltaY = 0;\n        }\n\n        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy\n        delta = deltaY === 0 ? deltaX : deltaY;\n\n        // New school wheel delta (wheel event)\n        if ( 'deltaY' in orgEvent ) {\n            deltaY = orgEvent.deltaY * -1;\n            delta  = deltaY;\n        }\n        if ( 'deltaX' in orgEvent ) {\n            deltaX = orgEvent.deltaX;\n            if ( deltaY === 0 ) { delta  = deltaX * -1; }\n        }\n\n        // No change actually happened, no reason to go any further\n        if ( deltaY === 0 && deltaX === 0 ) { return; }\n\n        // Need to convert lines and pages to pixels if we aren't already in pixels\n        // There are three delta modes:\n        //   * deltaMode 0 is by pixels, nothing to do\n        //   * deltaMode 1 is by lines\n        //   * deltaMode 2 is by pages\n        if ( orgEvent.deltaMode === 1 ) {\n            var lineHeight = $.data(this, 'mousewheel-line-height');\n            delta  *= lineHeight;\n            deltaY *= lineHeight;\n            deltaX *= lineHeight;\n        } else if ( orgEvent.deltaMode === 2 ) {\n            var pageHeight = $.data(this, 'mousewheel-page-height');\n            delta  *= pageHeight;\n            deltaY *= pageHeight;\n            deltaX *= pageHeight;\n        }\n\n        // Store lowest absolute delta to normalize the delta values\n        absDelta = Math.max( Math.abs(deltaY), Math.abs(deltaX) );\n\n        if ( !lowestDelta || absDelta < lowestDelta ) {\n            lowestDelta = absDelta;\n\n            // Adjust older deltas if necessary\n            if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {\n                lowestDelta /= 40;\n            }\n        }\n\n        // Adjust older deltas if necessary\n        if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {\n            // Divide all the things by 40!\n            delta  /= 40;\n            deltaX /= 40;\n            deltaY /= 40;\n        }\n\n        // Get a whole, normalized value for the deltas\n        delta  = Math[ delta  >= 1 ? 'floor' : 'ceil' ](delta  / lowestDelta);\n        deltaX = Math[ deltaX >= 1 ? 'floor' : 'ceil' ](deltaX / lowestDelta);\n        deltaY = Math[ deltaY >= 1 ? 'floor' : 'ceil' ](deltaY / lowestDelta);\n\n        // Normalise offsetX and offsetY properties\n        if ( special.settings.normalizeOffset && this.getBoundingClientRect ) {\n            var boundingRect = this.getBoundingClientRect();\n            offsetX = event.clientX - boundingRect.left;\n            offsetY = event.clientY - boundingRect.top;\n        }\n\n        // Add information to the event object\n        event.deltaX = deltaX;\n        event.deltaY = deltaY;\n        event.deltaFactor = lowestDelta;\n        event.offsetX = offsetX;\n        event.offsetY = offsetY;\n        // Go ahead and set deltaMode to 0 since we converted to pixels\n        // Although this is a little odd since we overwrite the deltaX/Y\n        // properties with normalized deltas.\n        event.deltaMode = 0;\n\n        // Add event and delta to the front of the arguments\n        args.unshift(event, delta, deltaX, deltaY);\n\n        // Clearout lowestDelta after sometime to better\n        // handle multiple device types that give different\n        // a different lowestDelta\n        // Ex: trackpad = 3 and mouse wheel = 120\n        if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }\n        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);\n\n        return ($.event.dispatch || $.event.handle).apply(this, args);\n    }\n\n    function nullLowestDelta() {\n        lowestDelta = null;\n    }\n\n    function shouldAdjustOldDeltas(orgEvent, absDelta) {\n        // If this is an older event and the delta is divisable by 120,\n        // then we are assuming that the browser is treating this as an\n        // older mouse wheel event and that we should divide the deltas\n        // by 40 to try and get a more usable deltaFactor.\n        // Side note, this actually impacts the reported scroll distance\n        // in older browsers and can cause scrolling to be slower than native.\n        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.\n        return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;\n    }\n\n}));\n","\n\n/* Flot plugin for adding the ability to pan and zoom the plot.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe default behaviour is double click and scrollwheel up/down to zoom in, drag\nto pan. The plugin defines plot.zoom({ center }), plot.zoomOut() and\nplot.pan( offset ) so you easily can add custom controls. It also fires\n\"plotpan\" and \"plotzoom\" events, useful for synchronizing plots.\n\nThe plugin supports these options:\n\n\tzoom: {\n\t\tinteractive: false\n\t\ttrigger: \"dblclick\" // or \"click\" for single click\n\t\tamount: 1.5         // 2 = 200% (zoom in), 0.5 = 50% (zoom out)\n\t}\n\n\tpan: {\n\t\tinteractive: false\n\t\tcursor: \"move\"      // CSS mouse cursor value used when dragging, e.g. \"pointer\"\n\t\tframeRate: 20\n\t}\n\n\txaxis, yaxis, x2axis, y2axis: {\n\t\tzoomRange: null  // or [ number, number ] (min range, max range) or false\n\t\tpanRange: null   // or [ number, number ] (min, max) or false\n\t}\n\n\"interactive\" enables the built-in drag/click behaviour. If you enable\ninteractive for pan, then you'll have a basic plot that supports moving\naround; the same for zoom.\n\n\"amount\" specifies the default amount to zoom in (so 1.5 = 150%) relative to\nthe current viewport.\n\n\"cursor\" is a standard CSS mouse cursor string used for visual feedback to the\nuser when dragging.\n\n\"frameRate\" specifies the maximum number of times per second the plot will\nupdate itself while the user is panning around on it (set to null to disable\nintermediate pans, the plot will then not update until the mouse button is\nreleased).\n\n\"zoomRange\" is the interval in which zooming can happen, e.g. with zoomRange:\n[1, 100] the zoom will never scale the axis so that the difference between min\nand max is smaller than 1 or larger than 100. You can set either end to null\nto ignore, e.g. [1, null]. If you set zoomRange to false, zooming on that axis\nwill be disabled.\n\n\"panRange\" confines the panning to stay within a range, e.g. with panRange:\n[-10, 20] panning stops at -10 in one end and at 20 in the other. Either can\nbe null, e.g. [-10, null]. If you set panRange to false, panning on that axis\nwill be disabled.\n\nExample API usage:\n\n\tplot = $.plot(...);\n\n\t// zoom default amount in on the pixel ( 10, 20 )\n\tplot.zoom({ center: { left: 10, top: 20 } });\n\n\t// zoom out again\n\tplot.zoomOut({ center: { left: 10, top: 20 } });\n\n\t// zoom 200% in on the pixel (10, 20)\n\tplot.zoom({ amount: 2, center: { left: 10, top: 20 } });\n\n\t// pan 100 pixels to the left and 20 down\n\tplot.pan({ left: -100, top: 20 })\n\nHere, \"center\" specifies where the center of the zooming should happen. Note\nthat this is defined in pixel space, not the space of the data points (you can\nuse the p2c helpers on the axes in Flot to help you convert between these).\n\n\"amount\" is the amount to zoom the viewport relative to the current range, so\n1 is 100% (i.e. no change), 1.5 is 150% (zoom in), 0.7 is 70% (zoom out). You\ncan set the default in the options.\n\n*/\n\n// First two dependencies, jquery.event.drag.js and\n// jquery.mousewheel.js, we put them inline here to save people the\n// effort of downloading them.\n\nrequire('jquery.event.drag');\nrequire('jquery-mousewheel');\n\n/*  in order to set zoom and pan ranges, each instance of Plot should be extended by\n*    instance.ranges = {\n*       yaxis: { panRange: [yaxis.min, yaxis.max], zoomRange: false}, \n*       xaxis: { panRange: [from,to], zoomRange: null }\n*    };\n*/\n\n(function ($) {\n    var options = {\n        xaxis: {\n            zoomRange: null, // or [number, number] (min range, max range)\n            panRange: null // or [number, number] (min, max)\n        },\n        yaxis: {\n            zoomRange: null, // or [number, number] (min range, max range)\n            panRange: null // or [number, number] (min, max)\n        },\n        zoom: {\n            interactive: false,\n            trigger: \"dblclick\", // or \"click\" for single click\n            amount: 1.5 // how much to zoom relative to current position, 2 = 200% (zoom in), 0.5 = 50% (zoom out)\n        },\n        pan: {\n            interactive: false,\n            cursor: \"move\",\n            frameRate: 20\n        }\n    };\n\n    function init(plot) {\n        function onZoomClick(e, zoomOut) {\n            var c = plot.offset();\n            c.left = e.pageX - c.left;\n            c.top = e.pageY - c.top;\n            if (zoomOut)\n                plot.zoomOut({ center: c });\n            else\n                plot.zoom({ center: c });\n        }\n\n        function onMouseWheel(e, delta) {\n            e.preventDefault();\n            onZoomClick(e, delta < 0);\n            return false;\n        }\n        \n        var prevCursor = 'default', prevPageX = 0, prevPageY = 0,\n            panTimeout = null;\n\n        function onDragStart(e) {\n            if (e.which != 1)  // only accept left-click\n                return false;\n            var c = plot.getPlaceholder().css('cursor');\n            if (c)\n                prevCursor = c;\n            plot.getPlaceholder().css('cursor', plot.getOptions().pan.cursor);\n            prevPageX = e.pageX;\n            prevPageY = e.pageY;\n        }\n        \n        function onDrag(e) {\n            var frameRate = plot.getOptions().pan.frameRate;\n            if (panTimeout || !frameRate)\n                return;\n\n            panTimeout = setTimeout(function () {\n                plot.pan({ left: prevPageX - e.pageX,\n                           top: prevPageY - e.pageY });\n                prevPageX = e.pageX;\n                prevPageY = e.pageY;\n                                                    \n                panTimeout = null;\n            }, 1 / frameRate * 1000);\n        }\n\n        function onDragEnd(e) {\n            if (panTimeout) {\n                clearTimeout(panTimeout);\n                panTimeout = null;\n            }\n                    \n            plot.getPlaceholder().css('cursor', prevCursor);\n            plot.pan({ left: prevPageX - e.pageX,\n                       top: prevPageY - e.pageY });\n        }\n        \n        function bindEvents(plot, eventHolder) {\n            var o = plot.getOptions();\n            if (o.zoom.interactive) {\n                eventHolder[o.zoom.trigger](onZoomClick);\n                eventHolder.mousewheel(onMouseWheel);\n            }\n\n            if (o.pan.interactive) {\n                eventHolder.bind(\"dragstart\", { distance: 10 }, onDragStart);\n                eventHolder.bind(\"drag\", onDrag);\n                eventHolder.bind(\"dragend\", onDragEnd);\n            }\n        }\n\n        plot.zoomOut = function (args) {\n            if (!args)\n                args = {};\n            \n            if (!args.amount)\n                args.amount = plot.getOptions().zoom.amount;\n\n            args.amount = 1 / args.amount;\n            plot.zoom(args);\n        };\n\n        plot.zoom = function (args) {\n            if (!args)\n                args = {};\n            \n            var c = args.center,\n                amount = args.amount || plot.getOptions().zoom.amount,\n                w = plot.width(), h = plot.height();\n\n            if (!c)\n                c = { left: w / 2, top: h / 2 };\n                \n            var xf = c.left / w,\n                yf = c.top / h,\n                minmax = {\n                    x: {\n                        min: c.left - xf * w / amount,\n                        max: c.left + (1 - xf) * w / amount\n                    },\n                    y: {\n                        min: c.top - yf * h / amount,\n                        max: c.top + (1 - yf) * h / amount\n                    }\n                };\n\n            $.each(plot.getAxes(), function(_, axis) {\n                var zr,pr, \n                    opts = axis.options,\n                    min = minmax[axis.direction].min,\n                    max = minmax[axis.direction].max;\n\n                    if(_ == 'xaxis') {\n                        zr = plot.ranges.xaxis.zoomRange;\n                        pr = plot.ranges.xaxis.panRange;\n                    } else {\n                        zr = plot.ranges.yaxis.zoomRange;\n                        pr = plot.ranges.yaxis.panRange;                       \n                    }\n\n                if (zr === false) // no zooming on this axis\n                    return;\n                    \n                min = axis.c2p(min);\n                max = axis.c2p(max);\n                if (min > max) {\n                    // make sure min < max\n                    var tmp = min;\n                    min = max;\n                    max = tmp;\n                }\n\n                //Check that we are in panRange\n                if (pr) {\n                    if (pr[0] != null && min < pr[0]) {\n                        min = pr[0];\n                    }\n                    if (pr[1] != null && max > pr[1]) {\n                        max = pr[1];\n                    }\n                }\n\n                var range = max - min;\n                if (zr &&\n                    ((zr[0] != null && range < zr[0] && amount >1) ||\n                     (zr[1] != null && range > zr[1] && amount <1)))\n                    return;\n            \n                opts.min = min;\n                opts.max = max;\n            });\n            \n            plot.setupGrid();\n            plot.draw();\n            \n            if (!args.preventEvent)\n                plot.getPlaceholder().trigger(\"plotzoom\", [ plot, args ]);\n        };\n\n        plot.pan = function (args) {\n            var delta = {\n                x: +args.left,\n                y: +args.top\n            };\n\n            if (isNaN(delta.x))\n                delta.x = 0;\n            if (isNaN(delta.y))\n                delta.y = 0;\n\n            $.each(plot.getAxes(), function (_, axis) {\n                var pr,\n                    opts = axis.options,                    \n                    min, max, d = delta[axis.direction];\n\n                min = axis.c2p(axis.p2c(axis.min) + d),\n                max = axis.c2p(axis.p2c(axis.max) + d);\n                    if(_ == 'xaxis') {\n                        pr = plot.ranges.xaxis.panRange;     \n                    } else {\n                        pr = plot.ranges.yaxis.panRange;                       \n                    }\n                if (pr === false) // no panning on this axis\n                    return;\n                \n                if (pr) {\n                    // check whether we hit the wall\n                    if (pr[0] != null && pr[0] > min) {\n                        d = pr[0] - min;\n                        min += d;\n                        max += d;\n                    }\n                    \n                    if (pr[1] != null && pr[1] < max) {\n                        d = pr[1] - max;\n                        min += d;\n                        max += d;\n                    }\n                }\n                \n                opts.min = min;\n                opts.max = max;\n            });\n            \n            plot.setupGrid();\n            plot.draw();\n            \n            if (!args.preventEvent)\n                plot.getPlaceholder().trigger(\"plotpan\", [ plot, args ]);\n        };\n\n        function shutdown(plot, eventHolder) {\n            eventHolder.unbind(plot.getOptions().zoom.trigger, onZoomClick);\n            eventHolder.unbind(\"mousewheel\", onMouseWheel);\n            eventHolder.unbind(\"dragstart\", onDragStart);\n            eventHolder.unbind(\"drag\", onDrag);\n            eventHolder.unbind(\"dragend\", onDragEnd);\n            if (panTimeout)\n                clearTimeout(panTimeout);\n        }\n        \n        plot.hooks.bindEvents.push(bindEvents);\n        plot.hooks.shutdown.push(shutdown);\n    }\n    \n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'navigate',\n        version: '2.0'\n    });\n})(jQuery);\n"]}